//
//  NamedModelObject+Bank.swift
//  Remote
//
//  Created by Jason Cardwell on 5/17/15.
//  Copyright (c) 2014 Moondeer Studios. All rights reserved.
//

import Foundation
import DataModel
import CoreData
import MoonKit

extension NamedModelObject {

  static func nameFormField(#context: NSManagedObjectContext) -> FormViewController.Field {
    let placeholder = "The " + entityDescription.name!.dashcaseString.subbed("-", " ") + "'s name"
    let validation: FormViewController.TextValidation = {
      !($0 == nil   ||
        $0!.isEmpty ||
        self.countInContext(context, predicate: âˆ€"name == '\($0)' OR autoGeneratedName == '\($0)'") > 0)
    }
    return FormViewController.Field.Text(value: "", placeholder: placeholder, validation: validation)
  }

  static func pickerFormField(#context: NSManagedObjectContext) -> FormViewController.Field {
    let initial = 0
    let allValues = allValuesForAttribute("name", context: context)
    let choices = ["None"] + sorted(allValues as! [String], <)
    return FormViewController.Field.Picker(value: initial, choices: choices)
  }

}
