#!/opt/local/bin/python
import sys, argparse, subprocess, re, os

global invalid_count

def comparison_key(file_name):
    global invalid_count
    match = re.match('[^[]*\[([0-9]+)\]', file_name)
    if match:
       return int(match.group(1))
    else:
        print("invalid file name '%s'" % file_name)
        invalid_count += 1
        return -1


def main(arguments):
    global invalid_count
    parser = argparse.ArgumentParser(description=__doc__,
                                     formatter_class=argparse.RawDescriptionHelpFormatter)
    parser.add_argument('directory',
                        help = "Directory containing the files")
    parser.add_argument('output',
                        help = "Output file name")
    parser.add_argument('-o',
                        '--output-directory',
                        help='Directory in which output file will be placed')

    args = parser.parse_args(arguments)

    ls_output = subprocess.check_output(["ls -1 %s*.png %s*.jpg | grep -v '@2x'" % (args.directory, args.directory)],
                                        shell=True,
                                        universal_newlines=True)
    file_name_list = ls_output.splitlines()
    invalid_count = -1
    sorted_file_name_list = sorted(file_name_list, key=comparison_key)
    if invalid_count > -1:
        print("invalid count: %i" % invalid_count)
        del sorted_file_name_list[0:invalid_count + 1]

    file_out = args.output if not args.output_directory else os.path.join(args.output_directory, args.output)

    with open(file_out, 'w') as f:
        print("\n".join(map(os.path.basename, sorted_file_name_list)), file=f)

if __name__ == '__main__':
    sys.exit(main(sys.argv[1:]))
